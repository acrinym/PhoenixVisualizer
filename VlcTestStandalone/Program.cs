using System; using System.Diagnostics; using System.IO; using LibVLCSharp.Shared; namespace VlcTestStandalone; class Program { static void Main(string[] args) { Console.WriteLine("=== VLC Audio Test ==="); try { Console.WriteLine("1. Testing VLC initialization..."); var libVlc = new LibVLC(enableDebugLogs: true); Console.WriteLine("   ‚úì LibVLC created successfully"); var mediaPlayer = new MediaPlayer(libVlc); Console.WriteLine("   ‚úì MediaPlayer created successfully"); Console.WriteLine("2. Testing media creation..."); var testMedia = new Media(libVlc, new Uri("file:///dummy")); Console.WriteLine("   ‚úì Media object created successfully"); testMedia.Dispose(); Console.WriteLine("3. Testing VLC properties..."); var version = libVlc.Version; Console.WriteLine($"   ‚úì VLC Version: {version}"); Console.WriteLine("4. Testing basic playback..."); if (args.Length > 0 && File.Exists(args[0])) { Console.WriteLine($"   Testing with: {args[0]}"); var media = new Media(libVlc, new Uri(Path.GetFullPath(args[0]))); mediaPlayer.Media = media; mediaPlayer.Playing += (s, e) => Console.WriteLine("   ‚úì Playback started"); mediaPlayer.Stopped += (s, e) => Console.WriteLine("   ‚úì Playback stopped"); var playResult = mediaPlayer.Play(); Console.WriteLine($"   Play() result: {playResult}"); if (playResult) { Console.WriteLine("   Waiting 3 seconds..."); System.Threading.Thread.Sleep(3000); var isPlaying = mediaPlayer.IsPlaying; var time = mediaPlayer.Time; Console.WriteLine($"   IsPlaying: {isPlaying}, Time: {time}ms"); if (isPlaying && time > 0) { Console.WriteLine("   üéµ SUCCESS: Audio is playing!"); } else { Console.WriteLine("   ‚ö†Ô∏è  WARNING: No actual playback detected"); } mediaPlayer.Stop(); } media.Dispose(); } else { Console.WriteLine("   No test file provided"); } mediaPlayer.Dispose(); libVlc.Dispose(); Console.WriteLine("=== Test Complete ==="); } catch (Exception ex) { Console.WriteLine($"‚úó TEST FAILED: {ex.Message}"); Console.WriteLine($"Stack: {ex.StackTrace}"); } } }
